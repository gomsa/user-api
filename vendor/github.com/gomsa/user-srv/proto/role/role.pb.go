// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/role/role.proto

package role

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Role struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName          string   `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt            string   `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string   `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_26e011caf756e89c, []int{0}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Role) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Role) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Role) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Role) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Role) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type ListQuery struct {
	Limit                int64    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Page                 int64    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Sort                 string   `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	DisplayName          string   `protobuf:"bytes,5,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListQuery) Reset()         { *m = ListQuery{} }
func (m *ListQuery) String() string { return proto.CompactTextString(m) }
func (*ListQuery) ProtoMessage()    {}
func (*ListQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_26e011caf756e89c, []int{1}
}

func (m *ListQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListQuery.Unmarshal(m, b)
}
func (m *ListQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListQuery.Marshal(b, m, deterministic)
}
func (m *ListQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListQuery.Merge(m, src)
}
func (m *ListQuery) XXX_Size() int {
	return xxx_messageInfo_ListQuery.Size(m)
}
func (m *ListQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_ListQuery.DiscardUnknown(m)
}

var xxx_messageInfo_ListQuery proto.InternalMessageInfo

func (m *ListQuery) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListQuery) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListQuery) GetSort() string {
	if m != nil {
		return m.Sort
	}
	return ""
}

func (m *ListQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListQuery) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

type Response struct {
	Role                 *Role    `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Roles                []*Role  `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	Valid                bool     `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_26e011caf756e89c, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *Response) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *Response) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

func init() {
	proto.RegisterType((*Role)(nil), "role.Role")
	proto.RegisterType((*ListQuery)(nil), "role.ListQuery")
	proto.RegisterType((*Response)(nil), "role.Response")
}

func init() { proto.RegisterFile("proto/role/role.proto", fileDescriptor_26e011caf756e89c) }

var fileDescriptor_26e011caf756e89c = []byte{
	// 326 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0x5d, 0x4b, 0xc3, 0x40,
	0x10, 0x34, 0x5f, 0xa5, 0xdd, 0x4a, 0x85, 0x45, 0x21, 0x08, 0x4a, 0x8c, 0x20, 0xf5, 0xa5, 0x42,
	0xfd, 0x05, 0x45, 0xc1, 0x17, 0x11, 0x3c, 0xf0, 0xb9, 0xa4, 0xbd, 0x45, 0x0e, 0xd2, 0x5e, 0xc8,
	0x5d, 0x85, 0xbe, 0xf9, 0x87, 0xfc, 0x2d, 0xfe, 0x25, 0xb9, 0xbd, 0xb3, 0x8a, 0x8a, 0x79, 0x49,
	0x76, 0x67, 0x26, 0xb9, 0x99, 0xe1, 0xe0, 0xa8, 0x69, 0xb5, 0xd5, 0x57, 0xad, 0xae, 0x89, 0x1f,
	0x13, 0xde, 0x31, 0x75, 0x73, 0xf9, 0x16, 0x41, 0x2a, 0x74, 0x4d, 0x38, 0x82, 0x58, 0xc9, 0x3c,
	0x2a, 0xa2, 0x71, 0x22, 0x62, 0x25, 0x11, 0x21, 0x5d, 0x57, 0x2b, 0xca, 0xe3, 0x22, 0x1a, 0x0f,
	0x04, 0xcf, 0x78, 0x06, 0xfb, 0x52, 0x99, 0xa6, 0xae, 0xb6, 0x73, 0xe6, 0x12, 0xe6, 0x86, 0x01,
	0x7b, 0x70, 0x92, 0x02, 0x86, 0x92, 0xcc, 0xb2, 0x55, 0x8d, 0x55, 0x7a, 0x9d, 0xa7, 0x41, 0xf1,
	0x05, 0xe1, 0x09, 0xc0, 0xb2, 0xa5, 0xca, 0x92, 0x9c, 0x57, 0x36, 0xcf, 0x58, 0x30, 0x08, 0xc8,
	0xcc, 0x3a, 0x7a, 0xd3, 0xc8, 0x4f, 0xba, 0xe7, 0xe9, 0x80, 0xcc, 0x6c, 0xf9, 0x1a, 0xc1, 0xe0,
	0x5e, 0x19, 0xfb, 0xb8, 0xa1, 0x76, 0x8b, 0x87, 0x90, 0xd5, 0x6a, 0xa5, 0x6c, 0xf0, 0xed, 0x17,
	0x67, 0xbd, 0xa9, 0x9e, 0xbd, 0xf5, 0x44, 0xf0, 0xec, 0x30, 0xa3, 0x5b, 0x1b, 0x2c, 0xf3, 0xbc,
	0x8b, 0x98, 0xfe, 0x13, 0x31, 0xfb, 0x15, 0xb1, 0x5c, 0x40, 0x5f, 0x90, 0x69, 0xf4, 0xda, 0x10,
	0x9e, 0x02, 0xd7, 0xc8, 0xe7, 0x0f, 0xa7, 0x30, 0xe1, 0x7e, 0x5d, 0x9f, 0x82, 0x71, 0x2c, 0x20,
	0x73, 0x6f, 0x93, 0xc7, 0x45, 0xf2, 0x43, 0xe0, 0x09, 0x17, 0xe1, 0xa5, 0xaa, 0x95, 0x64, 0x67,
	0x7d, 0xe1, 0x97, 0xe9, 0x7b, 0x04, 0x99, 0x60, 0xfe, 0x12, 0x52, 0x97, 0x17, 0x0f, 0xfc, 0xa7,
	0xbb, 0xec, 0xc7, 0xa3, 0xf0, 0xaf, 0x60, 0xa5, 0xdc, 0xc3, 0x73, 0x48, 0xee, 0xc8, 0xe2, 0xb7,
	0x43, 0xfe, 0x10, 0x5d, 0x40, 0xef, 0x86, 0xcb, 0xee, 0xd6, 0x3d, 0x71, 0xeb, 0xdd, 0xba, 0x5b,
	0xaa, 0xa9, 0x4b, 0xb7, 0xe8, 0xf1, 0xad, 0xbb, 0xfe, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4e, 0x6d,
	0x49, 0xff, 0x8e, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Roles service

type RolesClient interface {
	// 权限验证授权
	// 获取权限列表
	List(ctx context.Context, in *ListQuery, opts ...client.CallOption) (*Response, error)
	// 根据 唯一 获取权限
	Get(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error)
	// 创建权限
	Create(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error)
	// 更新权限
	Update(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error)
	// 删除权限
	Delete(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error)
}

type rolesClient struct {
	c           client.Client
	serviceName string
}

func NewRolesClient(serviceName string, c client.Client) RolesClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "role"
	}
	return &rolesClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *rolesClient) List(ctx context.Context, in *ListQuery, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.List", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) Get(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.Get", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) Create(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) Update(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.Update", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rolesClient) Delete(ctx context.Context, in *Role, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Roles.Delete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Roles service

type RolesHandler interface {
	// 权限验证授权
	// 获取权限列表
	List(context.Context, *ListQuery, *Response) error
	// 根据 唯一 获取权限
	Get(context.Context, *Role, *Response) error
	// 创建权限
	Create(context.Context, *Role, *Response) error
	// 更新权限
	Update(context.Context, *Role, *Response) error
	// 删除权限
	Delete(context.Context, *Role, *Response) error
}

func RegisterRolesHandler(s server.Server, hdlr RolesHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Roles{hdlr}, opts...))
}

type Roles struct {
	RolesHandler
}

func (h *Roles) List(ctx context.Context, in *ListQuery, out *Response) error {
	return h.RolesHandler.List(ctx, in, out)
}

func (h *Roles) Get(ctx context.Context, in *Role, out *Response) error {
	return h.RolesHandler.Get(ctx, in, out)
}

func (h *Roles) Create(ctx context.Context, in *Role, out *Response) error {
	return h.RolesHandler.Create(ctx, in, out)
}

func (h *Roles) Update(ctx context.Context, in *Role, out *Response) error {
	return h.RolesHandler.Update(ctx, in, out)
}

func (h *Roles) Delete(ctx context.Context, in *Role, out *Response) error {
	return h.RolesHandler.Delete(ctx, in, out)
}
